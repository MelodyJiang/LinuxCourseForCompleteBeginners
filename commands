记号说明：*表示举例，#表示补充说明

一、命令基本格式

1. 起始符
[root@localhost~]#
root: 当前登录用户名
localhost: 主机名
~：当前所在目录（家目录）
#：管理员用户提示符（普通用户提示符为$）

2. cmd [opt] [arg]
*简化选项和完全选项：如 -a  --all

3. ls [arg] [dir]
   -a: all files (including hidden files)
   -l: 显示详细信息
   -d: 查看目录属性  
   -h: 人性化显示
   -i: 显示inode, 文件的ID号
   
   #ls -l (ll) 显示详细信息解读： drwxr-xr-x 18 jiang jiang 4096 May  8 19:02 solver
   ##第1位：文件类型(ls -l可见)：按照权限区分，共7种，常见的有如下3种
   - file
   d dir
   l soft link
   
   ##第2-10位：
   用户组：相同权限的一组用户
   权限: r read; w write; x excute
   9位含义：前三位代表（文件）所有者权限，中间三位为（文件）所属组权限，最后三位代表其他人
   *rw-r--r--: 文件所有者可以读、写；所属组可以读；其他人可以读
   
   ##第11位：“.” ACL权限 
   
   ##第12位：引用计数，主要是链接
   
   ##13，14位：所有者，所属组
   
   ##15位：字节 ls -lh (a format which human can read easily) *drwxr-xr-x 18 jiang jiang 4.0K May  8 19:02 solver

   #hidden files ls -a：防止误操作
   
二、文件处理命令

1. 目录与文件处理命令（目录类比文件夹概念）
 # mkdir -p [dir]
 -p 递归创建（多层目录）

 # cd 
   cd ~ /cd+enter:进入家目录
   cd -: 进入上次目录
   cd ..:回到上级目录
   cd .:进入当前目录
   
   # 相对路径和绝对路径
     相对路径：比如root用户当前在家目录，cd ../usr/local/src: 参照当前目录进行
     绝对路径：cd /etc/: 从根目录开始一级一级
     # tab 目录补全；按两下命令补全

 # pwd: print working dir
 
 # rm
   -r: recurse
   -f: force 强制删除**
   
 # cp
   cp [file] [path]: cp agg.mps /home/jiang/ *原名复制； cp agg.mps /home/jiang/mytest *改名复制
   -r: recurse 可以复制目录
   -p: 连属性复制
   -d: 若源文件是链接文件，则复制链接属性
   -a: all，相当于 -pdr，与源文件一模一样，包括创建时间（默认的复制文件的时间是复制操作的时间，而不是源文件创建的时间）
   
 # mv: move; rename
   不同目录：剪切
   同一个目录下：改名
   
2. 常见目录作用
 # / 根目录
 # /bin      保存系统命令，bin普通用户可执行；sbin超级用户
   /sbin  命令保存目录
   /usr/bin  系统命令（普通用户）
   /usr/sbin  系统命令（超级用户）
 # /boot 启动目录，启动相关文件
 # /etc 配置文件保存目录
 # /lib 系统函数库
 # /dev 设备文件
 # /home 普通用户的家目录
 # /mnt 系统挂载目录 （3个空目录，用于外接磁盘、光盘、U盘）
 # /media 挂载目录
 # /misc 挂载目录
 # /root 超级用户的家目录
 # /tmp 临时目录
 # /proc 直接写入内存的
 # /sys 同上，相当于内存的盘符，不能直接操作
 # /usr 系统软件资源目录
 # /var 系统相关文档内容
 
3. 链接命令
 # ln [源文件] [目标文件]：生成链接文件
   -s 创建软链接
   
   # 硬链接：
     拥有相同的inode和存储block，可以看作同一个文件（一个文件两个不同的接入点，教室的前后两个门）
     不能跨分区，不能针对目录使用
     通过inode可以识别：相同的inode
     一个文件删除，另一个仍然可用
     **不建议使用：难以区分；限制多
     
    # 软链接：（类比创建快捷方式）
      可以理解为一种快捷方式
      软链接有自己的inode和block，存储的是源文件的位置信息（文件名和inode），从而链接到源文件的数据
      删除/修改源文件，软链接失效/改变
      修改软链接，源文件改变
      软链接文件本身的权限为wrxwrxwrx，但最终权限取决于源文件
      源文件一定要写绝对路径，除非两个文件都在当前目录下
 
三、文件搜索命令

 # locate [文件名]
   * 在后台数据库/var/lib/mlocate中搜索，该数据库每天更新一次，因而新建文件找不到
   * updatedb 更新数据库 （不同系统可能名字不同，centOS叫mlocate）
   * 速度很快，不需要遍历整个目录
   * 功能单一：只能按照文件名搜索
   * 配置文件：/etc/updatedb.conf  
     PRUNEFS = 规定搜索限制，包括不搜索的文件系统、文件类型和路径
  
 # 命令的搜索命令whereis，which 返回命令所在位置
   # whereis
     -b 只查找可执行文件
     -m 只查找帮助文件
   # which
     * 如有别名，可以查看命令的别名
   * 只能找到外部安装的命令，不能找到shell自带的命令。比如 cd
   
 *** PATH环境变量
  * 定义系统搜索命令的路径 
    linux中要执行一个可执行文件，需要该命令的绝对路径，但这会很不方便，因而出现了环境变量。
    # echo $PATH
      /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
     会从以上路径（以：分隔）寻找命令；若以上路径都没找到，则认为命令不存在
     故而系统命令，比如ls可以不打绝对路径即可执行；自己写的程序需要放入PATH搜索路径中，否则应该使用绝对路径去执行程序
     * windows中也有类似的设置，系统属性 —> 高级设置 —> 环境变量
 
 # find [搜索范围] [搜索条件] 
   * 整个根目录遍历，较慢
   * 非常强大，功能多
   * find / -name install.log：搜索根目录下名为install.log的文件
   * 应该避免大范围搜索，会非常耗费系统资源
   * find默认搜索是完全匹配，如需要模糊搜索应使用通配符
     ** 通配符
        * 匹配多个任意内容  find / -name "install.log*"
        ? 匹配任意一个字符
        [] 匹配括号中任意一个字符 find / -name "[mni]nsatll.log"
    
    -name 按文件名
    -iname 不区分大小写
    -user 按照所有者搜索   find /boot -nouser 可以找到没有所有者的文件：1）可能是内核产生的，如sys proc中的；2）可能是外来的，比如U盘内的数据
    -mtime 修改文件内容 find /var/log -mtime +10 查找10天前修改的文件
    -ctime 改变文件属性                      -10 10天内
    -atime 文件访问时间                       10 10天当天
    -size 按文件大小 find . -size  25k 查找当前目录下文件大小=25KB的文件 (兆字节M)
                                 -25k                    <25KB
                                 +25k                    >25KB
                     * 若不写单位，默认单位是扇区块，因而必须加单位
    -inum 按照inode find . -inode 236197
    -a and, 逻辑与 find /etc -size +20k -a -size -50k
    -o or, 逻辑或
                  -exec   {} \;  对搜索执行结果执行操作
                              find /etc -size +20k -a -size -50k -exec ls -lh {} \;
                              
  # grep [arg] 字符串 文件名：在文件中匹配符合条件的字符串
    -v 取反
    -i 忽略大小写
    * grep 包含匹配，与find不同
    * 如果需要匹配，使用正则表达式匹配
    * 搜索文件名称，使用通配符，完全匹配
      搜索文件中的数据，使用正则表达式，包含匹配

四、帮助命令
 
 #
    
    
    
  
                              
    
    
   
   
   
      
      
      
      
      
     
     





